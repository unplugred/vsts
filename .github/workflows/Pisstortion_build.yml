name: Pisstortion Build

env:
  PLUG: Pisstortion
  NOSPACE: Pisstortion

on:
  push:
    paths:
      - '**Pisstortion**'
  pull_request:
    paths:
      - '**Pisstortion**'
    branches:
      - master

jobs:
  build:
    name: build
    strategy:
      matrix:
        include:
        - {
            name: "Win64",
            os: windows-latest,
            compiler: "Visual Studio 17 2022"
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            compiler: "Unix Makefiles"
          }
#        - {
#            name: "Mac",
#            os: macos-latest,
#            compiler: "Xcode"
#          }
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - if: startsWith(matrix.os, 'ubuntu')
      name: (linux) install juce dependencies
      id: juce_dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install g++ libasound2-dev libjack-jackd2-dev ladspa-sdk libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev

    - if: startsWith(matrix.os, 'windows')
      name: (windows) configure
      id: configure_windows
      run: |
        cd ${{env.PLUG}}/source
        cmake -DBANNERTYPE=0 -B build -G "${{matrix.compiler}}" -T host=x64 -A x64

    - if: ${{ !startsWith(matrix.os, 'windows') }}
      name: (unix) configure
      id: configure_mac
      run: |
        cd ${{env.PLUG}}/source
        cmake -DBANNERTYPE=0 -B build -G "${{matrix.compiler}}"

    - name: build
      id: build
      run: |
        cd ${{env.PLUG}}/source
        cmake --build build --config Release --target ${{env.NOSPACE}}_VST3

    - if: startsWith(matrix.os, 'windows')
      name: (windows) package
      id: package_windows
      run: |
        mkdir -p "build/paid/${{env.PLUG}}"
        mv "Setup/build/paid/${{env.PLUG}}.vst3/Contents/x86_64-win/${{env.PLUG}}.vst3" "build/paid/${{env.PLUG}}/${{env.PLUG}}.vst3"
        rm -r "Setup/build/paid/${{env.PLUG}}.vst3"
        cp "build/paid/${{env.PLUG}}/${{env.PLUG}}.vst3" "Setup/build/paid/${{env.PLUG}}.vst3"

    - if: ${{ !startsWith(matrix.os, 'windows') }}
      name: (unix) package
      id: package
      run: |
        mkdir -p "build/paid/${{env.PLUG}}"
        mv "Setup/build/paid/${{env.PLUG}}.vst3" "build/paid/${{env.PLUG}}/${{env.PLUG}}.vst3"

    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.PLUG}} ${{ matrix.name }}
        path: build/paid/${{env.PLUG}}

    - if: startsWith(matrix.os, 'windows')
      name: (windows) configure free
      id: configure_windows_free
      run: |
        cd ${{env.PLUG}}/source
        cmake -DBANNERTYPE=1 -B build -G "${{matrix.compiler}}" -T host=x64 -A x64

    - if: ${{ !startsWith(matrix.os, 'windows') }}
      name: (unix) configure free
      id: configure_mac_free
      run: |
        cd ${{env.PLUG}}/source
        cmake -DBANNERTYPE=1 -B build -G "${{matrix.compiler}}"

    - name: build free
      id: build_free
      run: |
        cd ${{env.PLUG}}/source
        cmake --build build --config Release --target ${{env.NOSPACE}}_VST3

    - if: startsWith(matrix.os, 'windows')
      name: (windows) package free
      id: package_windows_free
      run: |
        mkdir -p "build/free/${{env.PLUG}}"
        mv "Setup/build/free/${{env.PLUG}}.vst3/Contents/x86_64-win/${{env.PLUG}}.vst3" "build/free/${{env.PLUG}}/${{env.PLUG}}.vst3"
        rm -r "Setup/build/free/${{env.PLUG}}.vst3"
        cp "build/free/${{env.PLUG}}/${{env.PLUG}}.vst3" "Setup/build/free/${{env.PLUG}}.vst3"

    - if: ${{ !startsWith(matrix.os, 'windows') }}
      name: (unix) package free
      id: package_free
      run: |
        mkdir -p "build/free/${{env.PLUG}}"
        mv "Setup/build/free/${{env.PLUG}}.vst3" "build/free/${{env.PLUG}}/${{env.PLUG}}.vst3"

    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.PLUG}} Free ${{ matrix.name }}
        path: build/free/${{env.PLUG}}

#    - if: startsWith(matrix.os, 'windows')
#      name: (windows) build installer
#      id: installer
#      run: |
#        cd Setup
#        iscc "${{env.PLUG}}.iss"
#        iscc "${{env.PLUG}} Free.iss"

#    - if: startsWith(matrix.os, 'windows')
#      uses: actions/upload-artifact@v2
#      with:
#        name: ${{env.PLUG}} Installer
#        path: "Setup/Output/${{env.PLUG}} Installer.exe"

#    - if: startsWith(matrix.os, 'windows')
#      uses: actions/upload-artifact@v2
#      with:
#        name: ${{env.PLUG}} Free Installer
#        path: "Setup/Output/${{env.PLUG}} Free Installer.exe"

